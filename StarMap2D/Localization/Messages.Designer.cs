#region License
/*
MIT License

Copyright(c) 2022 Petteri Kautonen

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StarMap2D.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StarMap2D.Localization.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Above horizon: {0}{1}|A text indicating a boolean value if something is above the horizon.
        /// </summary>
        internal static string msgAboveHorizonBooleanValue {
            get {
                return ResourceManager.GetString("msgAboveHorizonBooleanValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to clipboard|A message describing a functionality to copy to clipboard..
        /// </summary>
        internal static string msgCopyToClipboard {
            get {
                return ResourceManager.GetString("msgCopyToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date and time: {0}{1}|A text indicating a date and time value.
        /// </summary>
        internal static string msgDateDataDateTimeValue {
            get {
                return ResourceManager.GetString("msgDateDataDateTimeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declination: {0}{1}|A text indicating a right ascension value.
        /// </summary>
        internal static string msgDeclinationWithValue {
            get {
                return ResourceManager.GetString("msgDeclinationWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Horizontal X coordinate degrees: {0}{1}|A text indicating a horizontal X-coordinate value in degrees.
        /// </summary>
        internal static string msgHorizontalXDegreesWithValue {
            get {
                return ResourceManager.GetString("msgHorizontalXDegreesWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Horizontal Y coordinate degrees: {0}{1}|A text indicating a horizontal Y-coordinate value in degrees.
        /// </summary>
        internal static string msgHorizontalYDegreesWithValue {
            get {
                return ResourceManager.GetString("msgHorizontalYDegreesWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no|A message saying false in form of no..
        /// </summary>
        internal static string msgNo {
            get {
                return ResourceManager.GetString("msgNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object name: {0}{1}|A message describing a name value of any sky object of any kind..
        /// </summary>
        internal static string msgObjectNameValue {
            get {
                return ResourceManager.GetString("msgObjectNameValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right ascension: {0}{1}|A text indicating a right ascension value.
        /// </summary>
        internal static string msgRightAscensionWithValue {
            get {
                return ResourceManager.GetString("msgRightAscensionWithValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sky Map [Latitude: {0:F5}, Longitude: {1:F5}], [Time: {2}]|A title for a window containing a sky map control with latitude and longitude coordinates, date and time..
        /// </summary>
        internal static string msgSkyMap {
            get {
                return ResourceManager.GetString("msgSkyMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to d|An abbreviation for days..
        /// </summary>
        internal static string msgTimeIntervalDay {
            get {
                return ResourceManager.GetString("msgTimeIntervalDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to h|An abbreviation for hours..
        /// </summary>
        internal static string msgTimeIntervalHour {
            get {
                return ResourceManager.GetString("msgTimeIntervalHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ms|An abbreviation for milliseconds..
        /// </summary>
        internal static string msgTimeIntervalMillisecond {
            get {
                return ResourceManager.GetString("msgTimeIntervalMillisecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min|An abbreviation for seconds..
        /// </summary>
        internal static string msgTimeIntervalMinute {
            get {
                return ResourceManager.GetString("msgTimeIntervalMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to m|An abbreviation for months..
        /// </summary>
        internal static string msgTimeIntervalMonth {
            get {
                return ResourceManager.GetString("msgTimeIntervalMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to s|An abbreviation for seconds..
        /// </summary>
        internal static string msgTimeIntervalSecond {
            get {
                return ResourceManager.GetString("msgTimeIntervalSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to w|An abbreviation for weeks..
        /// </summary>
        internal static string msgTimeIntervalWeek {
            get {
                return ResourceManager.GetString("msgTimeIntervalWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to y|An abbreviation for years..
        /// </summary>
        internal static string msgTimeIntervalYear {
            get {
                return ResourceManager.GetString("msgTimeIntervalYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unknown|A value describing an unknown value of a physical variable..
        /// </summary>
        internal static string msgUnknownVariableValue {
            get {
                return ResourceManager.GetString("msgUnknownVariableValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yes|A message saying true in form of yes..
        /// </summary>
        internal static string msgYes {
            get {
                return ResourceManager.GetString("msgYes", resourceCulture);
            }
        }
    }
}
